---
name: Buld Image
on:
  push:
    tags:
      - '*'

env:
  image_name: aogier/python-poetry

jobs:

  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extra_packages:
          - ''
          - gcc
        python_version:
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - "3.11"
        image_variant:
          - ''
          - alpine
    steps:
      - uses: actions/checkout@v3
      - name: build
        shell: bash
        env:
          DOCKER_BUILDKIT: 1
        run: |
          set -x

          docker login -u aogier -p ${{ secrets.DOCKER_TOKEN }}

          read -r POETRY_VERSION REVISION <<< $(
            echo ${{ github.ref }} \
              | sed 's|refs/tags/||; s/-/ /'
          )
          TAG=py${{ matrix.python_version }}

          if [ ${{ matrix.extra_packages }} ]
          then
            TAG=$TAG$(
              for p in ${{ matrix.extra_packages }}
              do
                echo -n " ${p%=*}"
              done | tr ' ' -)
          fi

          if [ ${{ matrix.image_variant }} ]
          then
            TAG=$TAG-${{ matrix.image_variant }}
            DOCKERFILE='-f Dockerfile.${{ matrix.image_variant }}'
          fi

          base_tag=${{ env.image_name }}:$TAG

          docker build . $DOCKERFILE \
            --build-arg PYTHON_VERSION=${{ matrix.python_version }} \
            --build-arg EXTRA_PACKAGES=${{ matrix.extra_packages }} \
            --build-arg POETRY_VERSION=$POETRY_VERSION \
            --tag $base_tag

          docker push $base_tag &

          ADDITIONAL_TAGS=$POETRY_VERSION-$TAG
          if [ $REVISION ]
          then
            ADDITIONAL_TAGS="\
              $ADDITIONAL_TAGS \
              $TAG-$REVISION \
              $POETRY_VERSION-$TAG-$REVISION"
          fi
          for additional_tag in $ADDITIONAL_TAGS; do
            docker tag \
              $base_tag \
              ${{ env.image_name }}:$additional_tag

            tags_to_push="$tags_to_push ${{ env.image_name }}:$additional_tag"
          done
          wait

          for tag_to_push in $tags_to_push
          do
            docker push $tag_to_push &
          done
          wait
